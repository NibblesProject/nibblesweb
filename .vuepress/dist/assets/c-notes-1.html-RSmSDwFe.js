import{_ as t,r as c,o as p,c as o,b as s,d as n,e as i,a}from"./app-Xt6TcY-J.js";const l="/uploads/2024/08/2024081913512921.png",d="/uploads/2024/08/2024081913575199.png",r="/uploads/2024/08/2024082014364516.png",u={},h=a(`<h1 id="c语言初入门-——-基础的杂记" tabindex="-1"><a class="header-anchor" href="#c语言初入门-——-基础的杂记"><span>C语言初入门 —— 基础的杂记</span></a></h1><blockquote><p>当你开始学其他语言，回头看Python。你会对Python之禅中“简单优于复杂”有所体会，Python太简洁了😂</p></blockquote><p>我目前是暑假自学状态，所以本笔记是融合了国际知名的《Harvard CS50x》和国内b站的《鹏哥C语言》。和以前学的Python有些结构重合的部分我就不再提了，文中有的会有些许疑问，我还在学习，若有记得不对的可以提出来哈~</p><p><strong>CS50x：写程序更关注于自己的想法，以及实现需要的函数、条件、循环、变量。</strong></p><h2 id="c语言学习笔记" tabindex="-1"><a class="header-anchor" href="#c语言学习笔记"><span>C语言学习笔记</span></a></h2><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token comment">//头文件：引入标准输入输出库stdio是缩写，不要拼成studio！</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>C语言中的变量要先声明变量类型</p><p><code>main</code>函数是程序的入口 ，C语言程序是从<code>main</code>函数的第一行开始执行。且一个项目中只能有一个<code>main()</code>，一个项目不代表一个文件。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;填入占位符\\n&quot;</span><span class="token punctuation">,</span> 占位符要代表的<span class="token punctuation">)</span></span>
<span class="line"> <span class="token comment">//%c，%f，%s，%d这类是占位符。当然也可以直接用。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>语言的char单字符数字类型，应当用单引号括住单字符，双引号可以用于字符串（或零字符的字符串）</p><p>字符的本质就是ASCII编码。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c\\n&quot;</span><span class="token punctuation">,</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c\\n&quot;</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//两者输出结果相同</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>C语言字符串中个特殊的知识，就是在字符串的末尾隐藏放着一这个<code>\\0</code>字符是字符串的结束标志。 所以打印函数或者计算字符串长度<code>strlen()</code>的函数会在遇到此字符后停止打印或计算。 观察方法：F10+调试-窗口-监视，填入字符串并展开即可看到。 没有<code>\\0</code>字符的情况有可能使用了字符数组</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token keyword">char</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;e&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;f&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//但是输出就会没有终止，往往打印的时候后面会尾随乱码。为了避免这种情况，在字符数组后要自己手动添加\\0</span></span>
<span class="line"><span class="token keyword">char</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;e&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;f&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;\\0&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>strlen()</code> 是<code>string.h</code>的库函数（需要include），统计的就是<code>\\0</code>前的字符个数（不计<code>\\0</code>本身） 函数本身返回的是size_t类型的，所以占位符最好换成%zd</p><p>C语言中的<code>switch</code>也是代表选择结构的关键字之一</p><p>C语言中还有do while循环</p><p>转向语句：<code>break</code>语句、<code>goto</code>语句、<code>continue</code>语句、<code>return</code>语句</p><p>行内注释用<code>//</code>，多行的要用<code>/* */</code></p><table><thead><tr><th>Python</th><th>C</th></tr></thead><tbody><tr><td>elif</td><td>else if</td></tr><tr><td>or</td><td>||</td></tr><tr><td>and</td><td>&amp;&amp;</td></tr><tr><td>i+=1 / i-=1</td><td>可用左边的形式， 但若每次都加1则可表达为i++ / i--</td></tr></tbody></table><p><img src="`+l+'" alt="img"></p><p>C语言的各种数据类型都有自己的长度，计算操作符数用<code>sizeof()</code>，其返回C语言规定是只能是无符号整数(0和正整数)，为了统一各系统返回值类型，定义了 <code>size_t</code> 类型来表示，故没有规定具体的类型：<code>unsigned int</code> 或 <code>unsigned long long</code>等。括号内如果放的是表达式，则不会真实地计算。</p><p><img src="'+d+`" alt="img"></p><p>signed和unsigned：sign能表示正负数，unsign即无符号</p><p>char不确定是否有无符号，取决于编译器的实现。大部分的情况char == unsigned char</p><p>int默认是signed，且打印的占位符为%d。（unsigned打印占位符为%u）</p><p>数据类型——模具 ，C语言中变量需要声明数据类型，若有给初始值的过程即初始化。无初始化的话不能让你用。已有初始化后又给值那就叫赋值。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre class="language-c"><code><span class="line"><span class="token keyword">float</span> num <span class="token operator">=</span> <span class="token number">3.14f</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>全局变量在花括号外，局部变量在花括号内，局部值优先。</p><p>除号 / 两端都是整数，即为整数除法（且结果也为整数-只有整数部分丢弃小数部分）</p><p>负数取模的规则是，结果的正负号由第一个运算数的正负号决定</p><p>连续赋值，从右往左赋</p><p>单目操作符（++，--等），之前讲的符号中两边都要跟东西的是双目操作符</p><h2 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置"><span>环境配置</span></a></h2>`,34),k=s("code",null,"scanf()",-1),m={href:"https://gitee.com/NibblesProject/bite-c-class/wikis/C%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80/scanf%E4%B8%8D%E5%AE%89%E5%85%A8%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B9%8B%E5%90%8E%E5%A6%82%E6%9E%9C%E8%A6%81%E6%9C%89%E9%A2%84%E4%BB%A3%E7%A0%81%E8%AF%A5%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%EF%BC%9F",target:"_blank",rel:"noopener noreferrer"},g=a(`<p>but，我要强推CS50x课程对教学用IDE的解决方案！ （国外的讲师深知教学应该更重于idea和实现的代码，而非前期的繁杂的环境配置）</p><p>课程中使用了远程VSCode作为编辑器，并且云端已经全部搭建好C语言的环境了，开箱即用！ 这样的CodeSpace可以通过Github登录授权后拥有：https://cs50.dev (至于速度的话，你都能流畅在YouTube上看课了，同样网络环境下打开这链接，速度还是快的)</p><p>对于编译的操作还简化了很多，编译一个hello.c只需下面两条命令</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">make hello</span>
<span class="line">./hello</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>（后面课程Arrays中介绍了make实际上是clang的自动执行脚本，笔记）</p><p>同时侧边栏安装了一个图标是一个爱quack叫的吉祥物鸭子的插件，点开一看，是个免费的AIChat！ 不过，它的回答只能是英文的哦~ 基本上是能看懂滴</p><p>如下，这只鸭子的回答真的很喜欢quack🦆，也有可以在线使用的地方：https://cs50.ai/chat</p><p><img src="`+r+'" alt="img"></p><p>还有安装Docker，也许后面的课程还会教项目的上线吧。</p>',9);function b(v,E){const e=c("ExternalLinkIcon");return p(),o("div",null,[h,s("p",null,[n("《鹏哥C语言》中是用VS2022来教学的，还有关于"),k,n("函数的配置问题，我写到"),s("a",m,[n("Gitee Wiki"),i(e)]),n("中了。")]),g])}const f=t(u,[["render",b],["__file","c-notes-1.html.vue"]]),_=JSON.parse('{"path":"/blogs/jishuxuexi/c-notes-1.html","title":"C语言初入门 —— 基础的杂记","lang":"en-US","frontmatter":{"title":"C语言初入门 —— 基础的杂记","date":"2024/8/20","tags":["C语言"],"categories":["技术学习"]},"headers":[{"level":2,"title":"C语言学习笔记","slug":"c语言学习笔记","link":"#c语言学习笔记","children":[]},{"level":2,"title":"环境配置","slug":"环境配置","link":"#环境配置","children":[]}],"git":{"createdTime":1724401054000,"updatedTime":1724401054000,"contributors":[{"name":"NibblesProject","email":"me@nibbles.cn","commits":1}]},"filePathRelative":"blogs/技术学习/c-notes-1.md"}');export{f as comp,_ as data};
